<div class="col-lg-9">

    <h1>Ajax example with Zend Framework 2</h1>

    <div class="demo-box">
        <div class="col-lg-4">
            <?php
            $form = $this->form;
            $form->setAttribute('action', $this->url('learnZF2Ajax', array('action' => 'index','method' => 'post')));
            $form->prepare();
            echo $this->form()->openTag($form);
            ?>

            <div class="form-group">
                <label><?php echo $form->get('username')->getLabel(); ?></label>
                <?php echo $this->formText($form->get('username')) ?>
            </div>
            <div class="form-group">
                <label><?php echo $form->get('password')->getLabel(); ?></label>
                <?php echo $this->formPassword($form->get('password')) ?>
            </div>
            <input type="submit" value="Login" class="btn btn-success btn-lg" />
            <?php
            $this->form()->closeTag();
            ?>
        </div>
    </div>

    <p>
        This example contains about <strong>How to use Ajax in Zend framework 2</strong> codes,
        The most important parts of using Ajax in Zend Framework are these things:
    </p>

    1. <code>ViewJsonStrategy</code> to your config.
    <pre>
        <code class="language-php">
            <?php echo htmlentities("
                'view_manager' => [
                    'strategies' => [
                        'ViewJsonStrategy',
                    ],
                    'template_path_stack' => [
                        __DIR__ . '/../view',
                    ],
                ],
            ");
            ?>
        </code>
    </pre>

    2. <code>acceptableviewmodelselector</code> controller plugin.
    <pre>
        <code class="language-php">
            $acceptCriteria = [
                'Zend\View\Model\JsonModel' => ['application/json'],
                'Zend\View\Model\ViewModel' => ['text/html'],
            ];
            $viewModel = $this->acceptableviewmodelselector($acceptCriteria);
        </code>
    </pre>

    3. <code>JsonModel</code>.
        <pre>
        <code class="language-php">
            <?php echo htmlentities('
                if (!$viewModel instanceof JsonModel && $request->isXmlHttpRequest()) {
                    $viewModel = new JsonModel();
                }
            ');
            ?>
        </code>
    </pre>

    <p>
        By the way, you can find <a href="<?php echo $this->url('home') ?>">other examples using Zend Framework 2</a> in our home page :)
    </p>
    <p>&nbsp;</p>
    <p>
        <span class="label label-default">Ajax Zend framework 2 example</span>
        <span class="label label-default">ViewJsonStrategy Zend Framework 2 example</span>
        <span class="label label-default">acceptableviewmodelselector plugin Zend Framework 2 example</span>
        <span class="label label-default">JsonModel Zend Framework 2 example</span>
    </p>

</div>

<script type="text/javascript">
    jQuery('document').ready(function(){
        jQuery('#login').submit(function(e){
            var postData = $(this).serializeArray();
            var formURL = $(this).attr("action");
            var mess = '';
            $.ajax(
                {
                    url : formURL,
                    type: "POST",
                    dataType: "json",
                    data : postData,
                    success:function(data, textStatus, jqXHR)
                    {
                        console.log(data);
                        if(!data.data.result) {
                            jQuery.each(data.data.message,function(k,v){
                                jQuery.each(v,function(kk,vv){
                                   mess += vv + '\n';
                                });
                                alert(k + ' : ' + '\n'  + mess);
                                mess = '';
                            });
                        } else {
                            alert(data.data.message);
                        }
                    }
                });
            e.preventDefault(); //STOP default action
            return false;
        });
    });
</script>
